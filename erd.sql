-- This script was generated by the ERD tool in pgAdmin 4.
-- Database: shopdb

-- DROP DATABASE IF EXISTS shopdb;

CREATE DATABASE shopdb
    WITH
    OWNER = admin
    ENCODING = 'UTF8'
    LC_COLLATE = 'en_US.utf8'
    LC_CTYPE = 'en_US.utf8'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account
(
    account_id uuid NOT NULL DEFAULT gen_random_uuid(),
    tenant_id uuid,
    username character varying(255) COLLATE pg_catalog."default",
    email character varying(300) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    first_name character varying(300) COLLATE pg_catalog."default",
    last_name character varying(300) COLLATE pg_catalog."default",
    is_verified boolean,
    is_active boolean,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    role character varying(20) COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    deleted_at timestamp with time zone,
    CONSTRAINT account_pkey PRIMARY KEY (account_id),
    CONSTRAINT uniqueuser UNIQUE (username, email, phone)
);

CREATE TABLE IF NOT EXISTS public.brands
(
    brand_id uuid NOT NULL DEFAULT gen_random_uuid(),
    brand_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    origin_country character varying(100) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    tenant_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    CONSTRAINT brands_pkey PRIMARY KEY (brand_id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id uuid NOT NULL DEFAULT gen_random_uuid(),
    category_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    cat_image character varying(300) COLLATE pg_catalog."default",
    tenant_id uuid,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.consignment
(
    consignment_id uuid NOT NULL DEFAULT gen_random_uuid(),
    transfer_id uuid NOT NULL,
    product_id uuid NOT NULL,
    quantity integer NOT NULL,
    tenant_id uuid,
    outlet_id uuid,
    picked_up_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    picked_up_by uuid,
    CONSTRAINT consignment_pkey PRIMARY KEY (consignment_id)
);

CREATE TABLE IF NOT EXISTS public.credit_history
(
    credit_id uuid NOT NULL DEFAULT gen_random_uuid(),
    customer_id uuid NOT NULL,
    order_id uuid,
    total_amount_paid numeric(13, 2),
    total_amount_due numeric(13, 2),
    total_amount_remaining numeric(13, 2),
    transaction_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    expected_payment_date date,
    tenant_id uuid,
    outlet_id uuid,
    recorded_by uuid,
    remarks text COLLATE pg_catalog."default",
    last_payment_date timestamp without time zone,
    CONSTRAINT credit_history_pkey PRIMARY KEY (credit_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id uuid NOT NULL DEFAULT gen_random_uuid(),
    first_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(100) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(20) COLLATE pg_catalog."default",
    address_line1 character varying(255) COLLATE pg_catalog."default",
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    state_province character varying(100) COLLATE pg_catalog."default",
    postal_code character varying(20) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    preferred_contact_method character varying(60) COLLATE pg_catalog."default",
    additional_info text COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    tenant_id uuid,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customers_email_key UNIQUE (email),
    CONSTRAINT customers_phone_number UNIQUE (phone_number)
);

CREATE TABLE IF NOT EXISTS public.fees
(
    charged_percentage numeric(13, 0),
    charged_amount numeric(13, 2),
    charged_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    paid_status boolean DEFAULT false,
    oauth character varying(300) COLLATE pg_catalog."default" DEFAULT true
);

CREATE TABLE IF NOT EXISTS public.fees_charged
(
    fees_charged_id uuid NOT NULL DEFAULT gen_random_uuid(),
    charged_percentage numeric(13, 0),
    charged_amount numeric(13, 2),
    order_id uuid,
    order_paid_status character varying(100) COLLATE pg_catalog."default",
    tenant_id uuid,
    charged_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fees_charged_pkey PRIMARY KEY (fees_charged_id)
);

CREATE TABLE IF NOT EXISTS public.inventory
(
    id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_id uuid NOT NULL,
    qty numeric NOT NULL,
    tenant_id uuid NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    old_qty numeric,
    added_by uuid,
    min_stock_threshold numeric,
    max_stock_threshold numeric,
    CONSTRAINT inventory_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.item_unit
(
    unit_id uuid NOT NULL DEFAULT gen_random_uuid(),
    unit_type character varying(20) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    CONSTRAINT item_unit_pkey PRIMARY KEY (unit_type)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_item_id uuid NOT NULL DEFAULT gen_random_uuid(),
    order_id uuid NOT NULL,
    product_id uuid NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(13, 2) NOT NULL,
    total_price numeric(13, 2) NOT NULL,
    outlet_id uuid,
    tenant_id uuid,
    processed_by uuid,
    customer_id uuid,
    order_date timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id uuid NOT NULL DEFAULT gen_random_uuid(),
    tenant_id uuid NOT NULL,
    order_date timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    customer_id uuid NOT NULL,
    total_amount numeric(13, 2) NOT NULL,
    status character varying(50) COLLATE pg_catalog."default" NOT NULL,
    payment_method character varying(50) COLLATE pg_catalog."default",
    outlet_id uuid,
    processed_by uuid,
    notes text COLLATE pg_catalog."default",
    order_reference character varying(100) COLLATE pg_catalog."default",
    charge_percentage numeric(13, 0),
    charge_amount numeric(13, 2),
    discount_fee numeric(13, 0),
    cash_received numeric(13, 2),
    cash_balance numeric(13, 2),
    to_be_delivered boolean,
    delivery_address text COLLATE pg_catalog."default",
    amount_to_pay numeric(13, 2),
    paid_status character varying(60) COLLATE pg_catalog."default",
    is_credit boolean DEFAULT false,
    total_amount_due numeric(13, 2),
    total_amount_remaining numeric(13, 2),
    expected_payment_date date,
    transaction_from character varying(60) COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.outlet
(
    outlet_id uuid NOT NULL DEFAULT gen_random_uuid(),
    outlet_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tenant_id uuid NOT NULL,
    is_main_outlet boolean NOT NULL,
    outlet_description text COLLATE pg_catalog."default",
    outlet_address_line1 character varying(255) COLLATE pg_catalog."default",
    outlet_address_line2 character varying(255) COLLATE pg_catalog."default",
    outlet_city character varying(100) COLLATE pg_catalog."default",
    outlet_state_province character varying(100) COLLATE pg_catalog."default",
    outlet_postal_code character varying(20) COLLATE pg_catalog."default",
    outlet_country character varying(100) COLLATE pg_catalog."default",
    outlet_phone character varying(20) COLLATE pg_catalog."default",
    outlet_email character varying(255) COLLATE pg_catalog."default",
    opening_hours character varying(255) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT now(),
    is_electronic boolean DEFAULT false,
    updated_at timestamp without time zone,
    CONSTRAINT shops_pkey PRIMARY KEY (outlet_id)
);

CREATE TABLE IF NOT EXISTS public.outlet_inventory
(
    outlet_inventory_id uuid NOT NULL DEFAULT gen_random_uuid(),
    outlet_id uuid NOT NULL,
    product_id uuid NOT NULL,
    stock_quantity integer NOT NULL,
    min_stock_threshold integer NOT NULL DEFAULT 10,
    max_stock_threshold integer NOT NULL DEFAULT 20,
    last_restock_date date,
    last_stock_transfer_date date,
    tenant_id uuid,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    processed_by uuid NOT NULL,
    transfer_id uuid,
    CONSTRAINT outlet_inventory_pkey PRIMARY KEY (outlet_inventory_id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    product_id uuid NOT NULL DEFAULT gen_random_uuid(),
    prod_name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    prod_desc character varying(500) COLLATE pg_catalog."default",
    prod_price numeric(13, 2),
    cos_price numeric(13, 2),
    prod_pic character varying(500) COLLATE pg_catalog."default",
    cat_id uuid,
    prod_qty numeric DEFAULT 0,
    reorder numeric DEFAULT 10,
    supplier_id uuid NOT NULL,
    tenant_id uuid,
    serial character varying(200) COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    brand_id uuid,
    unit_id uuid,
    pack_name character varying(300) COLLATE pg_catalog."default",
    retail_price numeric(13, 0),
    wholesale_price numeric(13, 0),
    expiry_date date,
    CONSTRAINT product_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.product_variants
(
    variant_id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_id uuid NOT NULL,
    variant_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    price_adjustment numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    weight numeric(10, 2),
    dimensions character varying(50) COLLATE pg_catalog."default",
    color character varying(50) COLLATE pg_catalog."default",
    size character varying(20) COLLATE pg_catalog."default",
    is_available boolean NOT NULL,
    date_added date,
    date_modified timestamp without time zone,
    CONSTRAINT product_variants_pkey PRIMARY KEY (variant_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    is_available boolean NOT NULL,
    manufacturer character varying(100) COLLATE pg_catalog."default",
    category character varying(100) COLLATE pg_catalog."default",
    weight numeric(10, 2),
    dimensions character varying(50) COLLATE pg_catalog."default",
    date_added date,
    date_modified timestamp without time zone,
    image_url character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.shop_inventory
(
    inventory_id uuid NOT NULL DEFAULT gen_random_uuid(),
    shop_id uuid NOT NULL,
    product_id uuid NOT NULL,
    stock_quantity integer NOT NULL,
    min_stock_threshold integer NOT NULL,
    max_stock_threshold integer NOT NULL,
    last_restock_date date,
    CONSTRAINT shop_inventory_pkey PRIMARY KEY (inventory_id)
);

CREATE TABLE IF NOT EXISTS public.shop_user_access
(
    access_id uuid NOT NULL DEFAULT gen_random_uuid(),
    outlet_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" NOT NULL,
    is_default boolean DEFAULT true,
    tenant_id uuid,
    CONSTRAINT shop_user_access_pkey PRIMARY KEY (access_id)
);

CREATE TABLE IF NOT EXISTS public.suppliers
(
    supplier_id uuid NOT NULL DEFAULT gen_random_uuid(),
    supplier_name character varying(350) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(255) COLLATE pg_catalog."default",
    contact_email character varying(255) COLLATE pg_catalog."default",
    contact_phone character varying(20) COLLATE pg_catalog."default",
    address_line1 character varying(255) COLLATE pg_catalog."default",
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    state_province character varying(100) COLLATE pg_catalog."default",
    postal_code character varying(20) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    tenant_id uuid,
    updated_at timestamp with time zone,
    CONSTRAINT suppliers_pkey PRIMARY KEY (supplier_id)
);

CREATE TABLE IF NOT EXISTS public.tenants
(
    tenant_id uuid NOT NULL DEFAULT gen_random_uuid(),
    tenant_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(255) COLLATE pg_catalog."default",
    contact_email character varying(255) COLLATE pg_catalog."default",
    contact_phone character varying(20) COLLATE pg_catalog."default",
    address_line1 character varying(255) COLLATE pg_catalog."default",
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    state_province character varying(100) COLLATE pg_catalog."default",
    postal_code character varying(20) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    registration_date date,
    subscription_type character varying(50) COLLATE pg_catalog."default",
    subscription_expiry_date date,
    is_active boolean NOT NULL DEFAULT true,
    url text COLLATE pg_catalog."default",
    CONSTRAINT tenants_pkey PRIMARY KEY (tenant_id)
);

CREATE TABLE IF NOT EXISTS public.transfer_acknowledgment
(
    acknowledgment_id uuid NOT NULL DEFAULT gen_random_uuid(),
    transfer_id uuid NOT NULL,
    received_date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    is_confirmed boolean NOT NULL DEFAULT false,
    remarks text COLLATE pg_catalog."default",
    status character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT acknowledgment_pkey PRIMARY KEY (acknowledgment_id)
);

CREATE TABLE IF NOT EXISTS public.transfer_stock
(
    transfer_id uuid NOT NULL DEFAULT gen_random_uuid(),
    source_outlet_id uuid NOT NULL,
    destination_outlet_id uuid NOT NULL,
    transfer_date timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    notes text COLLATE pg_catalog."default",
    is_acknowledged boolean NOT NULL DEFAULT false,
    ref_code character varying(100) COLLATE pg_catalog."default",
    reference character varying(100) COLLATE pg_catalog."default",
    processed_by uuid,
    tenant_id uuid,
    transfer_from character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT transfer_data_pkey PRIMARY KEY (transfer_id)
);

CREATE TABLE IF NOT EXISTS public.units
(
    unit_id uuid NOT NULL DEFAULT gen_random_uuid(),
    unit_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    abbreviation character varying(20) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    CONSTRAINT units_pkey PRIMARY KEY (unit_id)
);

ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT tenantkey FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (tenant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consignment
    ADD CONSTRAINT consignment_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.consignment
    ADD CONSTRAINT consignment_transfer_id_fkey FOREIGN KEY (transfer_id)
    REFERENCES public.transfer_stock (transfer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.credit_history
    ADD CONSTRAINT credit_history_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.credit_history
    ADD CONSTRAINT credit_history_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.outlet
    ADD CONSTRAINT shops_tenant_id_fkey FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (tenant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.outlet_inventory
    ADD CONSTRAINT outlet_inventory_outlet_id_fkey FOREIGN KEY (outlet_id)
    REFERENCES public.outlet (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.outlet_inventory
    ADD CONSTRAINT outlet_inventory_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.product (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variants_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_inventory
    ADD CONSTRAINT shop_inventory_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_inventory
    ADD CONSTRAINT shop_inventory_shop_id_fkey FOREIGN KEY (shop_id)
    REFERENCES public.outlet (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_user_access
    ADD CONSTRAINT shop_user_access_shop_id_fkey FOREIGN KEY (outlet_id)
    REFERENCES public.outlet (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_user_access
    ADD CONSTRAINT shop_user_access_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transfer_acknowledgment
    ADD CONSTRAINT acknowledgment_transfer_id_fkey FOREIGN KEY (transfer_id)
    REFERENCES public.transfer_stock (transfer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transfer_stock
    ADD CONSTRAINT transfer_data_destination_outlet_id_fkey FOREIGN KEY (destination_outlet_id)
    REFERENCES public.outlet (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transfer_stock
    ADD CONSTRAINT transfer_data_source_outlet_id_fkey FOREIGN KEY (source_outlet_id)
    REFERENCES public.outlet (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;