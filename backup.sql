-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.account
(
    account_id uuid NOT NULL DEFAULT gen_random_uuid(),
    tenant_id uuid,
    username character varying(255) COLLATE pg_catalog."default",
    email character varying(300) COLLATE pg_catalog."default",
    phone character varying(20) COLLATE pg_catalog."default",
    first_name character varying(300) COLLATE pg_catalog."default",
    last_name character varying(300) COLLATE pg_catalog."default",
    is_verified boolean,
    is_active boolean,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone,
    role character varying(20) COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    deleted_at timestamp with time zone,
    CONSTRAINT account_pkey PRIMARY KEY (account_id),
    CONSTRAINT uniqueuser UNIQUE (username, email, phone)
);

CREATE TABLE IF NOT EXISTS public.brands
(
    brand_id uuid NOT NULL DEFAULT gen_random_uuid(),
    brand_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    origin_country character varying(100) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT brands_pkey PRIMARY KEY (brand_id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id uuid NOT NULL DEFAULT gen_random_uuid(),
    category_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    parent_category_id uuid,
    description text COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id uuid NOT NULL DEFAULT gen_random_uuid(),
    first_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(100) COLLATE pg_catalog."default",
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(20) COLLATE pg_catalog."default",
    address_line1 character varying(255) COLLATE pg_catalog."default",
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    state_province character varying(100) COLLATE pg_catalog."default",
    postal_code character varying(20) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    registration_date date,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id),
    CONSTRAINT customers_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.order_items
(
    order_item_id uuid NOT NULL DEFAULT gen_random_uuid(),
    order_id uuid NOT NULL,
    product_id uuid NOT NULL,
    quantity integer NOT NULL,
    unit_price numeric(10, 2) NOT NULL,
    total_price numeric(10, 2) NOT NULL,
    CONSTRAINT order_items_pkey PRIMARY KEY (order_item_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id uuid NOT NULL DEFAULT gen_random_uuid(),
    outlet_id uuid NOT NULL,
    order_date timestamp without time zone NOT NULL,
    customer_id uuid NOT NULL,
    total_amount numeric(10, 2) NOT NULL,
    status character varying(50) COLLATE pg_catalog."default" NOT NULL,
    payment_method character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.product_variants
(
    variant_id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_id uuid NOT NULL,
    variant_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    price_adjustment numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    weight numeric(10, 2),
    dimensions character varying(50) COLLATE pg_catalog."default",
    color character varying(50) COLLATE pg_catalog."default",
    size character varying(20) COLLATE pg_catalog."default",
    is_available boolean NOT NULL,
    date_added date,
    date_modified timestamp without time zone,
    CONSTRAINT product_variants_pkey PRIMARY KEY (variant_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id uuid NOT NULL DEFAULT gen_random_uuid(),
    product_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    price numeric(10, 2) NOT NULL,
    stock_quantity integer NOT NULL,
    is_available boolean NOT NULL,
    manufacturer character varying(100) COLLATE pg_catalog."default",
    category character varying(100) COLLATE pg_catalog."default",
    weight numeric(10, 2),
    dimensions character varying(50) COLLATE pg_catalog."default",
    date_added date,
    date_modified timestamp without time zone,
    image_url character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.shop_inventory
(
    inventory_id uuid NOT NULL DEFAULT gen_random_uuid(),
    outlet_id uuid NOT NULL,
    product_id uuid NOT NULL,
    stock_quantity integer NOT NULL,
    min_stock_threshold integer NOT NULL,
    max_stock_threshold integer NOT NULL,
    last_restock_date date,
    CONSTRAINT shop_inventory_pkey PRIMARY KEY (inventory_id)
);

CREATE TABLE IF NOT EXISTS public.shop_user_access
(
    access_id uuid NOT NULL DEFAULT gen_random_uuid(),
    outlet_id uuid NOT NULL,
    user_id uuid NOT NULL,
    role character varying(20) COLLATE pg_catalog."default" NOT NULL,
    is_default boolean DEFAULT true,
    tenant_id uuid,
    CONSTRAINT shop_user_access_pkey PRIMARY KEY (access_id)
);

CREATE TABLE IF NOT EXISTS public.shops
(
    outlet_id uuid NOT NULL DEFAULT gen_random_uuid(),
    shop_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    tenant_id uuid NOT NULL,
    is_main_shop boolean NOT NULL,
    shop_description text COLLATE pg_catalog."default",
    shop_address_line1 character varying(255) COLLATE pg_catalog."default",
    shop_address_line2 character varying(255) COLLATE pg_catalog."default",
    shop_city character varying(100) COLLATE pg_catalog."default",
    shop_state_province character varying(100) COLLATE pg_catalog."default",
    shop_postal_code character varying(20) COLLATE pg_catalog."default",
    shop_country character varying(100) COLLATE pg_catalog."default",
    shop_phone character varying(20) COLLATE pg_catalog."default",
    shop_email character varying(255) COLLATE pg_catalog."default",
    opening_hours character varying(255) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT shops_pkey PRIMARY KEY (outlet_id)
);

CREATE TABLE IF NOT EXISTS public.suppliers
(
    supplier_id uuid NOT NULL DEFAULT gen_random_uuid(),
    supplier_name character varying(350) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(255) COLLATE pg_catalog."default",
    contact_email character varying(255) COLLATE pg_catalog."default",
    contact_phone character varying(20) COLLATE pg_catalog."default",
    address_line1 character varying(255) COLLATE pg_catalog."default",
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    state_province character varying(100) COLLATE pg_catalog."default",
    postal_code character varying(20) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    registration_date date,
    CONSTRAINT suppliers_pkey PRIMARY KEY (supplier_id)
);

CREATE TABLE IF NOT EXISTS public.tenants
(
    tenant_id uuid NOT NULL DEFAULT gen_random_uuid(),
    tenant_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    contact_name character varying(255) COLLATE pg_catalog."default",
    contact_email character varying(255) COLLATE pg_catalog."default",
    contact_phone character varying(20) COLLATE pg_catalog."default",
    address_line1 character varying(255) COLLATE pg_catalog."default",
    address_line2 character varying(255) COLLATE pg_catalog."default",
    city character varying(100) COLLATE pg_catalog."default",
    state_province character varying(100) COLLATE pg_catalog."default",
    postal_code character varying(20) COLLATE pg_catalog."default",
    country character varying(100) COLLATE pg_catalog."default",
    website_url character varying(255) COLLATE pg_catalog."default",
    registration_date date,
    subscription_type character varying(50) COLLATE pg_catalog."default",
    subscription_expiry_date date,
    is_active boolean NOT NULL DEFAULT true,
    url text COLLATE pg_catalog."default",
    CONSTRAINT tenants_pkey PRIMARY KEY (tenant_id)
);

CREATE TABLE IF NOT EXISTS public.units
(
    unit_id uuid NOT NULL DEFAULT gen_random_uuid(),
    unit_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    abbreviation character varying(20) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    CONSTRAINT units_pkey PRIMARY KEY (unit_id)
);

ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT tenantkey FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (tenant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.categories
    ADD CONSTRAINT categories_parent_category_id_fkey FOREIGN KEY (parent_category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_items
    ADD CONSTRAINT order_items_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_outlet_id_fkey FOREIGN KEY (outlet_id)
    REFERENCES public.shops (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_variants
    ADD CONSTRAINT product_variants_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_inventory
    ADD CONSTRAINT shop_inventory_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_inventory
    ADD CONSTRAINT shop_inventory_outlet_id_fkey FOREIGN KEY (outlet_id)
    REFERENCES public.shops (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_user_access
    ADD CONSTRAINT shop_user_access_outlet_id_fkey FOREIGN KEY (outlet_id)
    REFERENCES public.shops (outlet_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shop_user_access
    ADD CONSTRAINT shop_user_access_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.account (account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shops
    ADD CONSTRAINT shops_tenant_id_fkey FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (tenant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;